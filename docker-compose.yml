
services:
  db:
    image: postgres:14
    container_name: trading_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: trading_redis
    restart: always

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_backend
    restart: always
    env_file: .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    ports:
      - "8000:8000"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: trading_frontend
    restart: always
    volumes:
      - .:/app
    depends_on:
      - backend
    ports:
      - "5173:5173"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_celery
    restart: always
    command: poetry run celery -A trading_app worker -l info -P solo
    env_file: .env
    depends_on:
      - backend
      - redis

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: trading_celery_beat
    restart: always
    command: poetry run celery -A trading_app beat --loglevel=info
    env_file: .env
    depends_on:
      - backend
      - redis

  nginx:
    image: nginx:latest
    container_name: trading_nginx
    restart: always
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend/dist:/app/frontend/
      - ./staticfiles:/app/staticfiles/
      - ./media:/app/media
    ports:
      - "80:80"

volumes:
  postgres_data: